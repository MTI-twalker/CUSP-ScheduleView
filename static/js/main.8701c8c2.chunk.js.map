{"version":3,"sources":["Timeline.js","App.js","reportWebVitals.js","index.js"],"names":["Timeline","props","handleFileChange","e","setState","error","target","files","length","inputFile","fileExtension","type","split","state","allowedExtensions","includes","file","handleParse","reader","FileReader","onload","a","csv","Papa","parse","result","header","parsedData","data","schedule","i","push","handleScheduleSeries","readAsText","weekList","series","options","chart","height","plotOptions","bar","horizontal","barHeight","rangeBarGroupRows","stroke","width","fill","opacity","yaxis","labels","style","fontSize","xaxis","rotate","rotateAlways","hideOverlappingLabels","showDuplicates","min","minHeight","maxHeight","datetimeFormatter","year","month","day","hour","tickAmount","legend","position","horizontalAlign","show","tooltip","enabled","x","format","this","bind","date","hours","minutes","seconds","cur_seconds_time","Date","getFullYear","getTime","readable_date","setHours","setMinutes","setSeconds","startDate","start","diff","getTimezoneOffset","dayOfYear","Math","floor","week_list","max_day","endDate","days","setDate","getDate","lines","headers","obj","currentline","j","JSON","stringify","uiconfig","user_mapping","CUSP","asset_mapping","scheduling_modes","user_order","provider_order","colors","color_mapping","provider_colors","DSN","NSN","ESTRACK","mode","get_week_list","week","contacts","c","parse_day","m","startStop","mySeries","assetData","userData","className","onChange","id","name","onClick","Object","keys","charts","Table","bordered","colSpan","span","backgroundColor","map","some","console","log","renderCharts","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8701c8c2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Table\r\n} from \"react-bootstrap\";\r\nimport Chart from 'react-apexcharts';\r\nimport Papa from \"papaparse\";\r\n\r\nclass Timeline extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      weekList: [],\r\n      series: {},\r\n      options: {\r\n        chart: {\r\n          height: 350,\r\n          type: \"rangeBar\",\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n            barHeight: \"75%%\",\r\n            rangeBarGroupRows: true,\r\n          },\r\n        },\r\n        stroke: {\r\n          width: 1,\r\n        },\r\n        fill: {\r\n          type: \"solid\",\r\n          opacity: 1.0,\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            style: {\r\n              fontSize: \"16px\"\r\n            }\r\n          }\r\n        },\r\n        xaxis: {\r\n          labels: {\r\n            style: {\r\n              fontSize: \"16px\"\r\n            },\r\n            rotate: -30,\r\n            rotateAlways: true,\r\n            hideOverlappingLabels: false,\r\n            showDuplicates: true,\r\n            min: 1730433600000,\r\n            minHeight: 125,\r\n            maxHeight: 300,\r\n            datetimeFormatter: {\r\n              year: \"yy-MM-dd\",\r\n              month: \"yy-MM-dd\",\r\n              day: \"yy-MM-dd\",\r\n              hour: \"HH:mm\",\r\n            },\r\n          },\r\n          tickAmount: 6,\r\n          type: \"datetime\",\r\n        },\r\n        legend: {\r\n          position: \"bottom\",\r\n          horizontalAlign: \"center\",\r\n          fontSize: \"16px\", \r\n          show: false\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n          style: {\r\n            fontSize: \"16px\"\r\n          },\r\n          x: {\r\n            format: \"yyyy-MM-dd HH:mm:ss\",\r\n          },\r\n        },\r\n      },\r\n      data: [],\r\n      error: \"\",\r\n      file: \"\",\r\n      allowedExtensions: [\"csv\"],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //this.getDSNData();\r\n    this.handleFileChange = this.handleFileChange.bind(this);\r\n    this.handleParse = this.handleParse.bind(this);\r\n  }\r\n  parse_day(date) {\r\n    var day = date.split(\"-\")[1].split(\"T\")[0];\r\n    var time = date.split(\"-\")[1].split(\"T\")[1];\r\n    let [hours, minutes, seconds] = time.split(\":\");\r\n    var startDate = new Date(new Date().getFullYear(), 0, 0);\r\n    var cur_seconds_time = startDate.getTime() + day * 24 * 60 * 60 * 1000;\r\n    var readable_date = new Date(cur_seconds_time);\r\n    readable_date.setHours(+hours - 4); // Set the hours, using implicit type coercion\r\n    readable_date.setMinutes(minutes); // can pass Number or String - doesn't really matter\r\n    readable_date.setSeconds(seconds);\r\n    return readable_date;\r\n  }\r\n  get_day(startDate) {\r\n    var start = new Date(startDate.getFullYear(), 0, 0);\r\n    var diff =\r\n      startDate -\r\n      start +\r\n      (startDate.getTimezoneOffset() - startDate.getTimezoneOffset()) *\r\n        60 *\r\n        1000;\r\n    var oneDay = 1000 * 60 * 60 * 24;\r\n    var dayOfYear = Math.floor(diff / oneDay);\r\n    var finalString = startDate.getFullYear() + \"-\" + dayOfYear + \"T00:00:00\";\r\n    return finalString;\r\n  }\r\n  get_week_list(schedule) {\r\n    /*\r\n    const min_day = Math.min(...schedule.map((o) => o.STARTTIME ? o.STARTTIME.split(\"-\")[1].split(\"T\")[0] : 365));\r\n    const max_day = Math.max(...schedule.map((o) => o.STARTTIME ? o.STARTTIME.split(\"-\")[1].split(\"T\")[0] : 0));\r\n    */\r\n    const min_day = 0;\r\n    const max_day = 365;\r\n    const diff = max_day - min_day;  \r\n    var startDate = new Date(new Date().getFullYear(), 0, 1);\r\n    let week_list = []\r\n    for (var i=0; i < diff; i += 7){\r\n      \r\n      week_list.push(\r\n        [\r\n          'week ' + i/7,\r\n          startDate.getTime() + ((min_day + i) * 24 * 60 * 60 * 1000),\r\n          startDate.getTime() + ((min_day + i + 7) * 24 * 60 * 60 * 1000)\r\n        ]\r\n      );\r\n    }   \r\n    return week_list;\r\n  }\r\n  \r\n  add_days(endDate, days) {\r\n    endDate.setDate(endDate.getDate() + days);\r\n    return endDate;\r\n  }\r\n  csvJSON(csv) {\r\n    var lines = csv.split(\"\\n\");\r\n\r\n    var result = [];\r\n    var headers = lines[0].split(\",\");\r\n\r\n    for (var i = 1; i < lines.length; i++) {\r\n      var obj = {};\r\n      var currentline = lines[i].split(\",\");\r\n\r\n      for (var j = 0; j < headers.length; j++) {\r\n        obj[headers[j]] = currentline[j];\r\n      }\r\n\r\n      result.push(obj);\r\n    }\r\n    return JSON.stringify(result); //JSON\r\n  }\r\n\r\n  // This function will be called when\r\n  // the file input changes\r\n  handleFileChange = (e) => {\r\n    this.setState({ error: \"\" });\r\n\r\n    // Check if user has entered the file\r\n    if (e.target.files.length) {\r\n      const inputFile = e.target.files[0];\r\n\r\n      // Check the file extensions, if it not\r\n      // included in the allowed extensions\r\n      // we show the error\r\n      const fileExtension = inputFile?.type.split(\"/\")[1];\r\n      if (!this.state.allowedExtensions.includes(fileExtension)) {\r\n        this.setState({ error: \"Please input a csv file\" });\r\n        return;\r\n      }\r\n\r\n      // If input type is correct set the state\r\n      this.setState({ file: inputFile });\r\n    }\r\n  };\r\n\r\n  handleParse = () => {\r\n    // If user clicks the parse button without\r\n    // a file we show a error\r\n    if (!this.state.file) return this.setState({ error: \"Enter a valid file\" });\r\n\r\n    // Initialize a reader which allows user\r\n    // to read any file or blob.\r\n    const reader = new FileReader();\r\n\r\n    // Event listener on reader when the file\r\n    // loads, we parse it and set the data.\r\n    reader.onload = async ({ target }) => {\r\n      var csv = Papa.parse(target.result, { header: true });\r\n      var parsedData = csv?.data;\r\n      var schedule = [];\r\n      for (const i in parsedData) {\r\n        if (i === 0) {\r\n          continue;\r\n        } else {\r\n          schedule.push(parsedData[i]);\r\n        }\r\n      }\r\n      this.handleScheduleSeries(schedule);\r\n    };\r\n    reader.readAsText(this.state.file);\r\n  };\r\n  handleScheduleSeries(schedule) {\r\n    const uiconfig = {\r\n      user_mapping: {\r\n        CUSP: \"CUSP\",\r\n      },\r\n\r\n      asset_mapping: {\r\n        14: \"DSN (Goldstone)\",\r\n        23: \"DSN (Goldstone)\",\r\n        24: \"DSN (Goldstone)\",\r\n        25: \"DSN (Goldstone)\",\r\n        26: \"DSN (Goldstone)\",\r\n        33: \"DSN (Canberra)\",\r\n        34: \"DSN (Canberra)\",\r\n        35: \"DSN (Canberra)\",\r\n        36: \"DSN (Canberra)\",\r\n        43: \"DSN (Canberra)\",\r\n        45: \"DSN (Canberra)\",\r\n        53: \"DSN (Madrid)\",\r\n        54: \"DSN (Madrid)\",\r\n        55: \"DSN (Madrid)\",\r\n        56: \"DSN (Madrid)\",\r\n        63: \"DSN (Madrid)\",\r\n        65: \"DSN (Madrid)\",\r\n        74: \"ESTRACK (New Norcia)\",\r\n        83: \"ESTRACK (Cerebros)\",\r\n        95: \"ESTRACK (Malargue)\",\r\n      },\r\n\r\n      scheduling_modes: {\r\n        \"1MODE\": {\r\n          user_order: [\"CUSP\"],\r\n          provider_order: [\r\n            \"DSN (Goldstone)\",\r\n            \"DSN (Canberra)\",\r\n            \"DSN (Madrid)\",\r\n            \"ESTRACK (Malargue)\",\r\n            \"ESTRACK (Cerebros)\",\r\n            \"ESTRACK (New Norcia)\",\r\n          ],\r\n          colors: [\r\n            \"#FEDB17\",\r\n            \"#FA861C\",\r\n            \"#ED1C24\",\r\n            \"#B1F339\",\r\n            \"#6BC342\",\r\n            \"#3A843B\",\r\n          ],\r\n          color_mapping: {\r\n            \"DSN (Goldstone)\": \"#FEDB17\",\r\n            \"DSN (Canberra)\": \"#FA861C\",\r\n            \"DSN (Madrid)\": \"#ED1C24\",\r\n            \"ESTRACK (Malargue)\": \"#50351A\",\r\n            \"ESTRACK (Cerebros)\": \"#86582B\",\r\n            \"ESTRACK (New Norcia)\": \"#BC7B3D\",\r\n          },\r\n        },\r\n      },\r\n\r\n      provider_colors: {\r\n        DSN: \"#FA861C\",\r\n        NSN: \"#6BC342\",\r\n        ESTRACK: \"#86582B\",\r\n      }\r\n    };\r\n\r\n    const user_mapping = uiconfig[\"user_mapping\"];\r\n\r\n    const asset_mapping = uiconfig[\"asset_mapping\"];\r\n\r\n\r\n    const mode = \"1MODE\";\r\n    const user_order = uiconfig[\"scheduling_modes\"][mode][\"user_order\"];\r\n\r\n    const provider_order = uiconfig[\"scheduling_modes\"][mode][\"provider_order\"];\r\n    const week_list = this.get_week_list(schedule);\r\n    this.setState({\r\n      weekList: week_list\r\n    })\r\n    for (var week = 0; week < week_list.length; week++){\r\n    var contacts = {};\r\n      \r\n      for (const c in schedule) {\r\n        if (schedule[c][\"STARTTIME\"] != null) {\r\n          if (\r\n            this.parse_day(schedule[c][\"STARTTIME\"]).getTime() <= week_list[week][2] &&\r\n            this.parse_day(schedule[c][\"STARTTIME\"]).getTime() >= week_list[week][1]\r\n          ) {\r\n            var m = user_mapping[schedule[c][\"PROJUSER\"]];\r\n            var a = asset_mapping[schedule[c][\"FACILITY\"]];\r\n\r\n            if (!contacts[a]) {\r\n              contacts[a] = {};\r\n            }\r\n\r\n            if (!contacts[a][m]) {\r\n              contacts[a][m] = [];\r\n            }\r\n\r\n            var startStop = [];\r\n            startStop.push(this.parse_day(schedule[c][\"STARTTIME\"]).getTime());\r\n            startStop.push(this.parse_day(schedule[c][\"ENDTIME\"]).getTime());\r\n\r\n            contacts[a][m].push(startStop);\r\n          }\r\n        }\r\n        }\r\n\r\n        var mySeries = [];\r\n        for (const a in provider_order) {\r\n          var assetData = {};\r\n          assetData[\"name\"] = provider_order[a];\r\n          assetData[\"data\"] = [];\r\n          for (const m in user_order) {\r\n            if (provider_order[a] in contacts) {\r\n              if (user_order[m] in contacts[provider_order[a]]) {\r\n                for (const c in contacts[provider_order[a]][user_order[m]]) {\r\n                  var userData = {};\r\n                  userData[\"x\"] = week_list[week][0];\r\n                  userData[\"y\"] = contacts[provider_order[a]][user_order[m]][c];\r\n                  assetData[\"data\"].push(userData);\r\n                }\r\n              } \r\n            } \r\n          }\r\n          mySeries.push(assetData);\r\n        }\r\n        this.setState({\r\n          options: {\r\n            ...this.state.options,\r\n            colors: uiconfig[\"scheduling_modes\"][mode][\"colors\"],\r\n          },\r\n          series: {\r\n            ...this.state.series,\r\n            [week_list[week][0]]: mySeries\r\n          },\r\n        });\r\n      }\r\n    \r\n  }\r\n\r\n  render() {\r\n    const renderCharts = () => {\r\n      if (this.state.weekList.length === Object.keys(this.state.series).length && this.state.weekList.length && Object.keys(this.state.series).length != 0) {\r\n        var charts = [];\r\n        \r\n        charts.push(\r\n          <Table key=\"charts-legend\" className=\"color-key-table\" bordered>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"text-center\" colSpan=\"6\">\r\n                  Provider Key\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <colgroup>\r\n              <col span=\"1\" style={{ width: \"3%\" }} />\r\n              <col span=\"1\" style={{ width: \"17%\" }} />\r\n              <col span=\"1\" style={{ width: \"3%\" }} />\r\n              <col span=\"1\" style={{ width: \"17%\" }} />\r\n            </colgroup>\r\n            <tbody>\r\n              <tr>\r\n                <th className=\"text-center\" colSpan=\"2\">\r\n                  DSN\r\n                </th>\r\n                <th className=\"text-center\" colSpan=\"2\">\r\n                  ESTRACK\r\n                </th>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ backgroundColor: \"#FEDB17\" }}></td>\r\n                <td className=\"text-left p-1\">DSN (Goldstone)</td>\r\n                <td style={{ backgroundColor: \"#B1F339\" }}></td>\r\n                <td className=\"text-left p-1\">ESTRACK (New Norcia)</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ backgroundColor: \"#FA861C\" }}></td>\r\n                <td className=\"text-left p-1\">DSN (Canberra)</td>\r\n                <td style={{ backgroundColor: \"#6BC342\" }}></td>\r\n                <td className=\"text-left p-1\">ESTRACK (Cerebros)</td>\r\n              </tr>\r\n              <tr>\r\n                <td style={{ backgroundColor: \"#ED1C24\" }}></td>\r\n                <td className=\"text-left p-1\">DSN (Madrid)</td>\r\n                <td style={{ backgroundColor: \"#3A843B\" }}></td>\r\n                <td className=\"text-left p-1\">ESTRACK (Malargue)</td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        );\r\n        charts.push(<h3 key=\"charts-title\" className=\"m-4\">CUSP Schedule</h3>);\r\n        for (var i = 0; i < this.state.weekList.length; i++) {\r\n          var boolarr = this.state.series[this.state.weekList[i][0]].map(x => x.data.length > 0);\r\n          if (boolarr.some(x => !!x)) {\r\n            console.log(this.state.series[this.state.weekList[i][0]].map(x => x.data.length>0))\r\n            charts.push(\r\n              <Chart\r\n                key={'test'+i}\r\n                options={this.state.options}\r\n                series={this.state.series[this.state.weekList[i][0]]}\r\n                type=\"rangeBar\"\r\n                height={300}\r\n              />\r\n            );\r\n          }\r\n        }\r\n        return <div>{charts}</div>;\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <fieldset className='m-3'>\r\n          <legend>\r\n            Enter CSV File\r\n          </legend>\r\n          <input\r\n            onChange={this.handleFileChange}\r\n            id=\"csvInput\"\r\n            name=\"file\"\r\n            type=\"File\"\r\n          />\r\n          <div>\r\n            <button onClick={this.handleParse}>Parse</button>\r\n          </div>\r\n        </fieldset>\r\n        <div id=\"chart\">\r\n          {renderCharts()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timeline;","import './App.css';\r\n\r\nimport Timeline from './Timeline.js';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Timeline></Timeline>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}